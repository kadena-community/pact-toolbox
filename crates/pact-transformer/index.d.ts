/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

/** Represents a parsing error with location information */
export interface ParseError {
  message: string
  line: number
  column: number
}
/** Represents a Pact module */
export interface PactModule {
  name: string
  path: string
  namespace?: string
  governance?: string
  doc?: string
  functions: Array<PactFunction>
  schemas: Array<PactSchema>
  capabilities: Array<PactCapability>
}
/** Represents a Pact function */
export interface PactFunction {
  name: string
  path: string
  doc?: string
  parameters: Array<PactParameter>
  returnType: string
  requiredCapabilities: Array<string>
}
/** Represents a function parameter */
export interface PactParameter {
  name: string
  paramType: string
}
/** Represents a Pact schema */
export interface PactSchema {
  name: string
  doc?: string
  fields: Array<PactSchemaField>
}
/** Represents a schema field */
export interface PactSchemaField {
  name: string
  fieldType: string
}
/** Represents a Pact capability */
export interface PactCapability {
  name: string
  doc?: string
  parameters: Array<PactParameter>
}
/** Result of transforming Pact code */
export interface TransformationResult {
  modules: Array<PactModuleInfo>
  code: string
  types: string
}
/** Basic module information for the result */
export interface PactModuleInfo {
  name: string
  path: string
}
/** Benchmark comparison results */
export interface BenchmarkComparison {
  regularTimeMs: number
  optimizedTimeMs: number
  speedupFactor: number
  iterations: number
}
/** Transformation options */
export interface TransformOptions {
  debug?: boolean
}
/** Create a transformer and transform Pact code in one call */
export declare function transformPactCode(pactCode: string, options?: TransformOptions | undefined | null): TransformationResult
/** Create a transformer and parse Pact code in one call */
export declare function parsePactCode(pactCode: string): Array<PactModule>
/** Show performance optimization analysis and potential improvements */
export declare function showOptimizationAnalysis(): void
/** Benchmark the current transformer performance */
export declare function benchmarkTransformer(pactCode: string, iterations?: number | undefined | null): number
/** Optimized transformation with memory optimizations */
export declare function transformPactCodeOptimizedV2(pactCode: string, options?: TransformOptions | undefined | null): TransformationResult
/** Benchmark comparison between regular and optimized transformers */
export declare function benchmarkComparison(pactCode: string, iterations?: number | undefined | null): BenchmarkComparison
/** High-performance Pact code transformer using tree-sitter */
export declare class PactTransformer {
  /** Create a new PactTransformer instance */
  constructor()
  /** Transform Pact code into JavaScript/TypeScript code and type definitions */
  transform(pactCode: string, options?: TransformOptions | undefined | null): TransformationResult
  /** Parse Pact code and return the AST structure without code generation */
  parse(pactCode: string): Array<PactModule>
}
